#ifndef BOXPICKUPS_H
#define BOXPICKUPS_H

struct rigidbody boxPickUps[10];

void boxPickUpsInit() {
  struct colider col0;
  col0.points[0] = newVec2(2154,1006);
  col0.points[1] = newVec2(2154,934);
  col0.points[2] = newVec2(2070,934);
  col0.points[3] = newVec2(2070,1007);
  col0.size = 4;
  boxPickUps[0].hitBox = col0;
  boxPickUps[0].isClosed = 1;
  boxPickUps[0].isTrigger = 1;
  boxPickUps[0].isFixed = 1;
  boxPickUps[0].inverse = 0;
  struct colider col1;
  col1.points[0] = newVec2(1422,1336);
  col1.points[1] = newVec2(1422,1273);
  col1.points[2] = newVec2(1336,1271);
  col1.points[3] = newVec2(1350,1337);
  col1.size = 4;
  boxPickUps[1].hitBox = col1;
  boxPickUps[1].isClosed = 1;
  boxPickUps[1].isTrigger = 1;
  boxPickUps[1].isFixed = 1;
  boxPickUps[1].inverse = 0;
  struct colider col2;
  col2.points[0] = newVec2(511,1345);
  col2.points[1] = newVec2(504,1289);
  col2.points[2] = newVec2(467,1271);
  col2.points[3] = newVec2(395,1272);
  col2.points[4] = newVec2(396,1326);
  col2.points[5] = newVec2(422,1352);
  col2.points[6] = newVec2(437,1391);
  col2.points[7] = newVec2(455,1399);
  col2.size = 8;
  boxPickUps[2].hitBox = col2;
  boxPickUps[2].isClosed = 1;
  boxPickUps[2].isTrigger = 1;
  boxPickUps[2].isFixed = 1;
  boxPickUps[2].inverse = 0;
  struct colider col3;
  col3.points[0] = newVec2(18,1486);
  col3.points[1] = newVec2(-52,1487);
  col3.points[2] = newVec2(-52,1559);
  col3.points[3] = newVec2(18,1559);
  col3.size = 4;
  boxPickUps[3].hitBox = col3;
  boxPickUps[3].isClosed = 1;
  boxPickUps[3].isTrigger = 1;
  boxPickUps[3].isFixed = 1;
  boxPickUps[3].inverse = 0;
  struct colider col4;
  col4.points[0] = newVec2(-2069,1924);
  col4.points[1] = newVec2(-2068,1853);
  col4.points[2] = newVec2(-2118,1852);
  col4.points[3] = newVec2(-2172,1887);
  col4.points[4] = newVec2(-2171,1963);
  col4.points[5] = newVec2(-2148,1961);
  col4.size = 6;
  boxPickUps[4].hitBox = col4;
  boxPickUps[4].isClosed = 1;
  boxPickUps[4].isTrigger = 1;
  boxPickUps[4].isFixed = 1;
  boxPickUps[4].inverse = 0;
  struct colider col5;
  col5.points[0] = newVec2(-2051,245);
  col5.points[1] = newVec2(-1979,245);
  col5.points[2] = newVec2(-1979,175);
  col5.points[3] = newVec2(-2050,173);
  col5.size = 4;
  boxPickUps[5].hitBox = col5;
  boxPickUps[5].isClosed = 1;
  boxPickUps[5].isTrigger = 1;
  boxPickUps[5].isFixed = 1;
  boxPickUps[5].inverse = 0;
  struct colider col6;
  col6.points[0] = newVec2(-2362,-1567);
  col6.points[1] = newVec2(-2290,-1567);
  col6.points[2] = newVec2(-2290,-1638);
  col6.points[3] = newVec2(-2363,-1638);
  col6.size = 4;
  boxPickUps[6].hitBox = col6;
  boxPickUps[6].isClosed = 1;
  boxPickUps[6].isTrigger = 1;
  boxPickUps[6].isFixed = 1;
  boxPickUps[6].inverse = 0;
  struct colider col7;
  col7.points[0] = newVec2(-1283,-1799);
  col7.points[1] = newVec2(-1283,-1721);
  col7.points[2] = newVec2(-1355,-1728);
  col7.points[3] = newVec2(-1355,-1800);
  col7.size = 4;
  boxPickUps[7].hitBox = col7;
  boxPickUps[7].isClosed = 1;
  boxPickUps[7].isTrigger = 1;
  boxPickUps[7].isFixed = 1;
  boxPickUps[7].inverse = 0;
  struct colider col8;
  col8.points[0] = newVec2(84,-1482);
  col8.points[1] = newVec2(139,-1429);
  col8.points[2] = newVec2(107,-1380);
  col8.points[3] = newVec2(53,-1433);
  col8.points[4] = newVec2(60,-1462);
  col8.size = 5;
  boxPickUps[8].hitBox = col8;
  boxPickUps[8].isClosed = 1;
  boxPickUps[8].isTrigger = 1;
  boxPickUps[8].isFixed = 1;
  boxPickUps[8].inverse = 0;
  struct colider col9;
  col9.points[0] = newVec2(2988,-955);
  col9.points[1] = newVec2(3060,-955);
  col9.points[2] = newVec2(3059,-1024);
  col9.points[3] = newVec2(2987,-1026);
  col9.size = 4;
  boxPickUps[9].hitBox = col9;
  boxPickUps[9].isClosed = 1;
  boxPickUps[9].isTrigger = 1;
  boxPickUps[9].isFixed = 1;
  boxPickUps[9].inverse = 0;
}

#endif
